<?xml version="1.0" encoding="utf-8" ?>
<configuration>

  <appSettings>

    <!-- Should the extracted game state be visualized from the graphical engine? -->
    <add key="Game.Tetris.Visualize" value="true" />

    <!-- The level to start from (0 - 9). -->
    <add key="Game.Tetris.StartLevel" value="9" />
    <!-- Play in heart mode? -->
    <add key="Game.Tetris.HeartMode" value="false" />


    <!-- 'true' means, the agent starts from the game over screen. 'false' means, the agent starts from the start menu. -->
    <add key="Game.Tetris.StartFromGameOver" value="false" />

    <!-- In multiplayer mode, the bot checks for spawned lines on the bottom. -->
    <add key="Game.Tetris.Multiplayer" value="false" />


    <!-- Should every command beeing checked and maybe repeated? -->
    <add key="Game.Tetris.Check.Enabled" value="false" />
    <!-- Number of image samples in the check state. 1 means no sampling. -->
    <add key="Game.Tetris.Check.Samples" value="1" />


    <!-- Number of image samples in the extraction state. 1 means no sampling. -->
    <add key="Game.Tetris.Extractor.Samples" value="1" />

    <!-- The probability that must be reached to accept an image for the next piece. -->
    <add key="Game.Tetris.Extractor.ThresholdNextPiece" value="0.7" />
    <!-- The probability that must be reached to accept an image for the current piece. -->
    <add key="Game.Tetris.Extractor.ThresholdCurrentPiece" value="0.7" />
    <!-- The probability that must be reached to accept an image for a moved piece. -->
    <add key="Game.Tetris.Extractor.ThresholdMovedPiece" value="0.5" />


    <!-- The time in ms that is added to calculate the search height. The search height must be high enought. -->
    <add key="Game.Tetris.Timing.AnalyzePaddingTime" value="100" />
    <!-- The time in ms that is subtracted after the drop. We don't want to miss important frames. -->
    <add key="Game.Tetris.Timing.DropPaddingTime" value="0" />
    <!-- The time in ms that is added to calculate the search height in check mode. The search height must be high enought. -->
    <add key="Game.Tetris.Timing.CheckPaddingTime" value="200" />


    <!-- The path for the game boy rom. Only relevant in the Emulated engine mode. -->
    <add key="Emulator.Rom.Path" value="Roms/tetris.gb" />


    <!-- The engine mode. Possible values ar 'Emulated' and 'Physical'. -->
    <add key="Robot.Engine.Mode" value="Emulated" />


    <!-- The camera source. 0 for integrated camera, 1 for external camera. -->
    <add key="Robot.Camera.Index" value="1" />

    <!-- Must the image from the camera be rotated by 180 degrees? -->
    <add key="Robot.Camera.RotateImage" value="true" />

    <!-- In the Emulated mode, we can add noise to simulate the real camera. -->
    <add key="Robot.Camera.Noise" value="false" />

    <!-- Keypoints to calculate the transformation matrix. Order: top left, top right, button left, button right. -->
    <!--<add key="Robot.Quantizer.Transformation.KeyPoints" value="457,333,210,331,440,139,227,138" />-->
    <add key="Robot.Quantizer.Transformation.KeyPoints" value="0,0,160,0,0,144,160,144" />
    

    <!-- The subtracted constant of the adaptive threshold. -->
    <add key="Robot.Quantizer.Threshold.Constant" value="13" />

    <!-- The block size of the adaptive threshold. -->
    <add key="Robot.Quantizer.Threshold.BlockSize" value="17" />

    <!-- Should the image be blurred? -->
    <add key="Robot.Quantizer.Blur" value="false" />


    <!-- Settings for the Tinkerforge API -->
    <add key="Robot.Actuator.Host" value="localhost" />
    <add key="Robot.Actuator.Port" value="4223" />
    <add key="Robot.Actuator.UidMaster" value="6JKbWn" />
    <add key="Robot.Actuator.UidRelay1" value="mTA" />
    <add key="Robot.Actuator.UidRelay2" value="mTC" />


    <!-- The time in ms the Actuator waits between press and release using a hit -->
    <add key="Robot.Actuator.Hit.Time" value="35" />
    <!-- The time in ms the Actuator waits after a hit -->
    <add key="Robot.Actuator.Hit.DelayAfter" value="40" />


    <!-- Frames per second of the live cam stream -->
    <add key="Robot.Ui.CamFramerate" value="0.001" />

    <!-- The log level to write (possible values are: 'Info', 'Warn', 'Error') -->
    <add key="Robot.Ui.LogLevel" value="Info" />

  </appSettings>

</configuration>